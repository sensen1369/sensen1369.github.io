<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>something1</title>
    <link href="/2022/06-12-something1/"/>
    <url>/2022/06-12-something1/</url>
    
    <content type="html"><![CDATA[<p>早上去买早点，小摊前四五个人，没什么队伍的样子，我就站在后面一点，稍微装作在排队。</p><p>过了一会会儿，一位阿姨走到我边上，问：“是在这排队吗？”。</p><p>“嗯”，我记得她好像是从前面那几个人里走过来的，“你先”。</p><p>“不用，你排前面”，应该不是，“我排你后面”。</p><p>但是她还是站在我边上，也没有站到我身后。</p><p>又一会会儿，前面的人走了两个，空出了一个身位。</p><p>身边的阿姨上去了，急忙扫码转了五块钱，喊道：“我转过去了，五块的”。</p><p>好了，她走了，</p><p>我前面还有两个人。</p><p>买完回头看了一眼，后面的人排成五行两列，还蛮整齐，挺好。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>搭建电影墙</title>
    <link href="/2022/06-11-moviewall/"/>
    <url>/2022/06-11-moviewall/</url>
    
    <content type="html"><![CDATA[<h1 id="1-开头"><a href="#1-开头" class="headerlink" title="1. 开头"></a>1. 开头</h1><p>一方面是因为学校有个pt站，需要上传下载，另一方面是因为自己有一点收藏的癖好，一些电影看完也不想删掉，这就导致电脑里的电影越来越多。</p><p>而且这些电影一般都是英文命名的，就平常想看电影的时候，打开文件夹根本不知道这都是什么电影。</p><p><img src="/2022/06-11-moviewall/1.png"></p><p>就想着能不能做到像哪些视频网站一样，把电影弄成海报的形式展示出来，这样就方便很多了。</p><p>以下推荐两款软件：<strong>Kodi</strong> 和 <strong>Jellyfin</strong></p><p>先看一下效果</p><p><strong>Kodi</strong>：</p><p><img src="/2022/06-11-moviewall/kodi.png"></p><p><strong>Jellyfin</strong>:</p><p><img src="/2022/06-11-moviewall/jellyfin.png"></p><p>两款软件都能满足需求，如果只是想要管理一下自己本地的电影，<strong>Kodi</strong>就可以了，<br><strong>Jellyfin</strong>比较适合用来搭建媒体中心，就局域网内的其他设备也可以访问到资源，如果拥有公网IP的话，就不限局域网了。</p><p>开始介绍：</p><h1 id="2-刮削器"><a href="#2-刮削器" class="headerlink" title="2. 刮削器"></a>2. 刮削器</h1><p>作用就是根据电影去匹配海报、导演啥的一系列电影信息。</p><p>大家最好先把自己的电影文件夹整理下，就一部电影外面套一个文件夹，不然等会会有点乱。</p><p>刮削器：<strong>tinyMediaManager</strong></p><h2 id="2-1-软件下载安装"><a href="#2-1-软件下载安装" class="headerlink" title="2.1. 软件下载安装"></a>2.1. 软件下载安装</h2><p>下载网址：<a href="https://www.tinymediamanager.org/">https://www.tinymediamanager.org/</a></p><p>下载有点慢，完成后安装</p><h2 id="2-2-修改hosts"><a href="#2-2-修改hosts" class="headerlink" title="2.2. 修改hosts"></a>2.2. 修改hosts</h2><p>hosts文件目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">C:\Windows\System32\drivers\etc<br></code></pre></td></tr></table></figure><p>记事本打开hosts<br>在最后一行加上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">13.224.161.90 api.themoviedb.org<br></code></pre></td></tr></table></figure><p>如果提示无法保存，就先保存到其他位置，把后缀.txt去掉后替换掉原来的即可。</p><h2 id="2-3-软件配置"><a href="#2-3-软件配置" class="headerlink" title="2.3. 软件配置"></a>2.3. 软件配置</h2><p>打开tmm<br>启动页面中把电影和电视节目(电视剧)数据库都选上</p><p><img src="/2022/06-11-moviewall/tmm.png"></p><p>媒体库可以先不添加</p><p>进去后打开右上角的工具添加电影目录和电视节目的目录。</p><p><img src="/2022/06-11-moviewall/3.png"></p><p><kbd>Ctrl</kbd>+<kbd>A</kbd>把电影全选上</p><p>点击<strong>更新源</strong><br>点击<strong>搜索并刮削所选电影 — 自动匹配</strong></p><p>等待软件刮削结束，有些电影并不能匹配正确，它会将不匹配的电影弹出来，这时需要手动搜索选择，可以根据电影中文名或者IMDb来搜索 。</p><p>全部完成后，它会把电影海报和nfo文件（里面保存着电影的一些基本信息，如视频格式、分辨率等）都下载到电影的目录下。</p><p>如果不是pt下载的，不需要做种的，可以试下后面栏的<strong>重命名&amp;清理</strong>，文件夹里也会简单明了很多。</p><p>这部分完成</p><h1 id="3-Kodi"><a href="#3-Kodi" class="headerlink" title="3. Kodi"></a>3. Kodi</h1><h2 id="3-1-软件下载"><a href="#3-1-软件下载" class="headerlink" title="3.1. 软件下载"></a>3.1. 软件下载</h2><p>地址：<a href="http://kodi.tv/">http://kodi.tv/</a></p><p>下载也挺慢的，完成后安装</p><h2 id="3-2-修改中文界面"><a href="#3-2-修改中文界面" class="headerlink" title="3.2. 修改中文界面"></a>3.2. 修改中文界面</h2><p><strong>Setting</strong> – <strong>Interface</strong> 左下改成<strong>Standard</strong><br><strong>Skin</strong>  – <strong>Fonts</strong> 改成<strong>Arial based</strong><br><strong>Regiona</strong> – <strong>Language</strong> 改成<strong>chinese(simple)</strong></p><h2 id="3-3-视频库添加"><a href="#3-3-视频库添加" class="headerlink" title="3.3. 视频库添加"></a>3.3. 视频库添加</h2><p>设置 – 媒体 – 资料库 – 视频 – 添加视频，添加本地目录</p><p>选择好分类和信息提供者</p><p><img src="/2022/06-11-moviewall/4.png"></p><h2 id="3-4-完成"><a href="#3-4-完成" class="headerlink" title="3.4. 完成"></a>3.4. 完成</h2><p>等待更新完成后就能看到上面说的效果</p><h2 id="3-5-potplayer播放"><a href="#3-5-potplayer播放" class="headerlink" title="3.5. potplayer播放"></a>3.5. potplayer播放</h2><p>利用kodi构建了本地视频的电影墙，但是点击播放后，使用的是自带的播放器，不是很友好。</p><p>新建文本文档，重命名为 <strong>playercorefactory.xml</strong></p><p>写入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;<br><br>&lt;playercorefactory&gt;<br><br>  &lt;players&gt;<br><br>    &lt;player name=<span class="hljs-string">&quot;PotPlayer&quot;</span> <span class="hljs-built_in">type</span>=<span class="hljs-string">&quot;ExternalPlayer&quot;</span> audio=<span class="hljs-string">&quot;false&quot;</span> video=<span class="hljs-string">&quot;true&quot;</span>&gt;<br><br>&lt;filename&gt;C:\Program Files\DAUM\PotPlayer\PotPlayerMini64.exe&lt;/filename&gt;<br><br>    &lt;hidexbmc&gt;<span class="hljs-literal">true</span>&lt;/hidexbmc&gt;<br><br>    &lt;hideconsole&gt;<span class="hljs-literal">false</span>&lt;/hideconsole&gt;<br><br>    &lt;hidecursor&gt;<span class="hljs-literal">false</span>&lt;/hidecursor&gt;<br><br>    &lt;playonestackitem&gt;<span class="hljs-literal">true</span>&lt;/playonestackitem&gt;<br><br>    &lt;/player&gt;<br><br>  &lt;/players&gt;<br><br>  &lt;rules action=<span class="hljs-string">&quot;prepend&quot;</span>&gt;<br><br>    &lt;rule video=<span class="hljs-string">&quot;true&quot;</span> player=<span class="hljs-string">&quot;PotPlayer&quot;</span>&gt;<br><br>    &lt;/rule&gt;<br><br>  &lt;/rules&gt;<br><br>&lt;/playercorefactory&gt; <br></code></pre></td></tr></table></figure><p>filename这栏修改为电脑上播放器的所在位置。</p><p>将文件保存到kodi的用户目录下即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">C:\Users\sensen\AppData\Roaming\Kodi\userdata<br></code></pre></td></tr></table></figure><p>在Kodi选择电影后就会跳到potplayer播放，</p><p>关闭potplayer，跳回kodi。</p><h1 id="4-Jellyfin"><a href="#4-Jellyfin" class="headerlink" title="4. Jellyfin"></a>4. Jellyfin</h1><h2 id="4-1-软件安装"><a href="#4-1-软件安装" class="headerlink" title="4.1. 软件安装"></a>4.1. 软件安装</h2><p>地址：<a href="https://jellyfin.org/">https://jellyfin.org/</a></p><p>安装</p><h2 id="4-2-配置"><a href="#4-2-配置" class="headerlink" title="4.2. 配置"></a>4.2. 配置</h2><p>打开软件，右键电脑右下角图标，选择<strong>Open jellyfin</strong></p><p>第一步应该是创建帐号，然后选地区和语言啥的，就照着提示一步一步下来，媒体库可以先不弄。</p><p>最后进到主界面</p><p>左上角三横杠——<strong>控制台</strong>——<strong>媒体库</strong>，添加媒体库，就选下类型，视频所在文件夹，其他都可以不动，确定即可。</p><p>它会自动扫描媒体库，结束后返回主页就会出现刚建的媒体库，里面就是自己保存的视频。</p><p>刷新完成后，就能展示出上面的效果。</p><h2 id="4-3-其他设备访问"><a href="#4-3-其他设备访问" class="headerlink" title="4.3. 其他设备访问"></a>4.3. 其他设备访问</h2><p>通过命令行输入ipconfig查询电脑ip</p><p>关闭电脑防火墙</p><p>局域网内，手机浏览器输入ip+端口号8096即可访问</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">192.18.3.3:8096<br></code></pre></td></tr></table></figure><h2 id="4-4-修改元数据"><a href="#4-4-修改元数据" class="headerlink" title="4.4. 修改元数据"></a>4.4. 修改元数据</h2><p>有些电影剧集数据刮削下来可能有错误，需要自己去修改一下元数据，点开三个横杠可以看到。</p><h2 id="4-5-字幕设置"><a href="#4-5-字幕设置" class="headerlink" title="4.5. 字幕设置"></a>4.5. 字幕设置</h2><p>一般不支持ass字幕文件，<strong>设置</strong>——<strong>字幕</strong>，设置如下：</p><p><img src="/2022/06-11-moviewall/5.png"></p><h2 id="4-6-用户管理"><a href="#4-6-用户管理" class="headerlink" title="4.6. 用户管理"></a>4.6. 用户管理</h2><p>刚开始注册的帐号为管理员帐号，有权限能够删除本地文件，注意是<strong>本地文件</strong><br>如果只想让其他人访问的话，可以在<strong>控制台</strong>——<strong>用户</strong>，添加用户，设置相关权限。</p><h2 id="4-7-硬件加速"><a href="#4-7-硬件加速" class="headerlink" title="4.7. 硬件加速"></a>4.7. 硬件加速</h2><p><strong>控制台</strong>——<strong>播放</strong>。</p><p>jellyfin的硬件转码主要依赖于ffmpeg，</p><p>在windows平台下，intel核显可以使用intel quick sync(qsv)，N卡用NVENC，A卡用AMF进行转码。</p><p>Linux（包含群晖系统）都是统一用VA API，实际起硬件加速作用的主要是&#x2F;dev&#x2F;dri（需要根权限）。</p><h2 id="4-8-IPV6访问"><a href="#4-8-IPV6访问" class="headerlink" title="4.8. IPV6访问"></a>4.8. IPV6访问</h2><p><strong>控制台</strong>——<strong>联网</strong>——<strong>启用ipv6</strong>，保存。</p><p>浏览器输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[ipv6地址]:8096<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Markdown用法</title>
    <link href="/2022/06-10-Markdown/"/>
    <url>/2022/06-10-Markdown/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 一级标题</span><br><span class="hljs-comment">## 二级标题</span><br></code></pre></td></tr></table></figure><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">*斜体*<br>_斜体_<br>**粗体**<br>__粗体__<br>***粗斜体***<br>___粗斜体___<br></code></pre></td></tr></table></figure><p><em>斜体</em><br><em>斜体</em><br><strong>粗体</strong><br><strong>粗体</strong><br><em><strong>粗斜体</strong></em><br><em><strong>粗斜体</strong></em></p><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">***<br>- - -<br>分割线<br>******<br>---<br></code></pre></td></tr></table></figure><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">~~删除线~~<br></code></pre></td></tr></table></figure><p><del>删除线</del></p><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;u&gt;下划线&lt;/u&gt;<br></code></pre></td></tr></table></figure><p><u>下划线</u></p><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">* 列表<br>+ 列表<br>- 列表<br>1. 列表<br>2. 列表<br><br>1. 列表<br>    1. 嵌套列表<br></code></pre></td></tr></table></figure><ul><li>列表</li></ul><ul><li>列表</li></ul><ul><li>列表</li></ul><ol><li><p>列表</p></li><li><p>列表</p></li><li><p>列表</p><ol><li>嵌套列表</li></ol></li></ol><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">&gt;区块<br><br>&gt;区块<br>&gt;&gt;嵌套区块<br><br>+ 列表<br>    &gt;区块<br></code></pre></td></tr></table></figure><blockquote><p>区块</p></blockquote><blockquote><p>区块</p><blockquote><p>嵌套区块</p></blockquote></blockquote><ul><li>列表<blockquote><p>区块</p></blockquote></li></ul><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">\\```bash(可指定语言)<br>\\$ hexo <br>\\```<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo s<br></code></pre></td></tr></table></figure><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">超链接[百度](https://baidu.com/)<br><br>百度&lt;http://baidu.com&gt;<br></code></pre></td></tr></table></figure><p>超链接<a href="https://baidu.com/">百度</a></p><p>百度<a href="http://baidu.com/">http://baidu.com</a></p><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">![替换文本](http://static.runoob.com/images/runoob-logo.png <span class="hljs-string">&#x27;title&#x27;</span>)<br><br>&lt;img src=<span class="hljs-string">&quot;./Markdown/sensen.png&quot;</span> width=<span class="hljs-string">&quot;30%&quot;</span>&gt;<br></code></pre></td></tr></table></figure><p><img src="http://static.runoob.com/images/runoob-logo.png" alt="替换文本" title="title"></p><img src="/2022/06-10-Markdown/sensen.png" width="30%" alig="center"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">图片居中：<br>&lt;div align=<span class="hljs-string">&#x27;center&#x27;</span>&gt;&lt;img src=<span class="hljs-string">&quot;./Markdown/sensen.png&quot;</span> width=<span class="hljs-string">&quot;30%&quot;</span> alig=<span class="hljs-string">&#x27;center&#x27;</span>&gt;&lt;/div&gt;<br></code></pre></td></tr></table></figure><div align="center"><img src="/2022/06-10-Markdown/sensen.png" width="30%" alig="center"></div><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">|  表头   | 表头  |<br>|  ----  | ----  |<br>| 单元格  | 单元格 |<br>| 单元格  | 单元格 |<br><br>| 左对齐 | 右对齐 | 居中对齐 |<br>| :-----| ----: | :----: |<br>| 单元格单元格 | 单元格单元格 | 单元格单元格 |<br>| 单元格 | 单元格 | 单元格 |<br></code></pre></td></tr></table></figure><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table><table><thead><tr><th align="left">左对齐</th><th align="right">右对齐</th><th align="center">居中对齐</th></tr></thead><tbody><tr><td align="left">单元格单元格</td><td align="right">单元格单元格</td><td align="center">单元格单元格</td></tr><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr></tbody></table><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">使用 &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt; 重启电脑<br></code></pre></td></tr></table></figure><p>使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑</p><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">转义符号\<br>**文本加粗** <br>\*\* 正常显示星号 \*\*<br></code></pre></td></tr></table></figure><p><strong>文本加粗</strong><br>** 正常显示星号 **</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>使用hexo+github搭建个人博客</title>
    <link href="/2022/06-10-hexo/"/>
    <url>/2022/06-10-hexo/</url>
    
    <content type="html"><![CDATA[<h1 id="1-安装Node-js"><a href="#1-安装Node-js" class="headerlink" title="1. 安装Node.js"></a>1. 安装Node.js</h1><p>地址：<a href="http://nodejs.cn/download/">http://nodejs.cn/download/</a></p><h1 id="2-安装Git"><a href="#2-安装Git" class="headerlink" title="2. 安装Git"></a>2. 安装Git</h1><p>地址：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></p><h2 id="2-1-验证安装是否成功"><a href="#2-1-验证安装是否成功" class="headerlink" title="2.1. 验证安装是否成功"></a>2.1. 验证安装是否成功</h2><p>使用 <kbd>Win</kbd>+<kbd>R</kbd> cmd 打开命令行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ node -v<br>$ npm -v<br>$ git --version<br></code></pre></td></tr></table></figure><p>会显示各个版本，如图：<br><img src="/2022/06-10-hexo/1.png"></p><h1 id="3-安装hexo"><a href="#3-安装hexo" class="headerlink" title="3. 安装hexo"></a>3. 安装hexo</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm install hexo-cli -g<br></code></pre></td></tr></table></figure><h2 id="3-1-验证"><a href="#3-1-验证" class="headerlink" title="3.1. 验证"></a>3.1. 验证</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo -v<br></code></pre></td></tr></table></figure><p>结果如图：<br><img src="/2022/06-10-hexo/2.png"></p><h1 id="4-初始化hexo"><a href="#4-初始化hexo" class="headerlink" title="4. 初始化hexo"></a>4. 初始化hexo</h1><p>在想要存放博客文件的目录下，右键，选择git bash here</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo ini blog<br></code></pre></td></tr></table></figure><p>blog为创建的文件夹名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">cd</span> blog<br>$ npm install<br></code></pre></td></tr></table></figure><p>安装完成后会生成以下内容，主要为：</p><table><thead><tr><th align="center">文件名</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">node_modules</td><td align="center">依赖包（插件）</td></tr><tr><td align="center">scaffolds</td><td align="center">生成文章的一些模版</td></tr><tr><td align="center">source</td><td align="center">你的文章目录</td></tr><tr><td align="center">themes</td><td align="center">主题</td></tr><tr><td align="center">_config.yml</td><td align="center">配置文件</td></tr><tr><td align="center">public</td><td align="center">静态页面目录，后面会生成</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo g<br>or<br>$ hexo generate<br></code></pre></td></tr></table></figure><p>根据md文件生成静态页面，在生成的public的文件夹里</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo s<br>or<br>$ hexo server<br></code></pre></td></tr></table></figure><p>打开本地服务<br>浏览器打开<a href="http://localhost:4000/">http://localhost:4000</a>即可看到生成页面，会比较慢</p><p>页面显示如下即成功：<br><img src="/2022/06-10-hexo/3.png"></p><p><kbd>Ctrl</kbd>+<kbd>C</kbd>关闭服务</p><h1 id="5-创建github仓库"><a href="#5-创建github仓库" class="headerlink" title="5. 创建github仓库"></a>5. 创建github仓库</h1><h2 id="5-1-注册github"><a href="#5-1-注册github" class="headerlink" title="5.1. 注册github"></a>5.1. 注册github</h2><p>地址：<a href="https://github.com/">https://github.com</a></p><h2 id="5-2-创建仓库"><a href="#5-2-创建仓库" class="headerlink" title="5.2. 创建仓库"></a>5.2. 创建仓库</h2><p><img src="/2022/06-10-hexo/4.png"></p><p>Repository name填上昵称.github.io初始化仓库的后面三项可不勾选</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sensen1369.github.io<br></code></pre></td></tr></table></figure><h2 id="5-3-连接电脑和github帐号"><a href="#5-3-连接电脑和github帐号" class="headerlink" title="5.3. 连接电脑和github帐号"></a>5.3. 连接电脑和github帐号</h2><p>打开git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ssh key: ssh-keygen -t rsa -C 注册邮箱地址<br></code></pre></td></tr></table></figure><p>之后一直回车确定，完成后会在c盘用户目录下生成.ssh文件夹</p><p><img src="/2022/06-10-hexo/5.png"></p><p>用记事本打开id_rsa.pub，全选复制<br>进入github主页，点击右边头像，点击settings<br>新建ssh key</p><img src="/2022/06-10-hexo/6.png" width="70%"><p>title随便填，key粘贴刚才复制的内容</p><p>测试连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ssh -T git@github.com<br></code></pre></td></tr></table></figure><p><img src="/2022/06-10-hexo/7.png"></p><p>如图即为成功</p><h1 id="6-hexo部署"><a href="#6-hexo部署" class="headerlink" title="6. hexo部署"></a>6. hexo部署</h1><p>打开blog文件夹下的_config.yml文件，拉到最后，修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">deploy:<br>    <span class="hljs-built_in">type</span>: git<br>    repo: https://github.com/name/name.github.io.git<br>    branch: main<br></code></pre></td></tr></table></figure><p>name是创建的仓库名字</p><h2 id="6-1-安装deploy-git"><a href="#6-1-安装deploy-git" class="headerlink" title="6.1. 安装deploy-git"></a>6.1. 安装deploy-git</h2><p>是部署命令，可以将文件上传到github仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo clean<br></code></pre></td></tr></table></figure><p>清除之前生成的页面，即删除public文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo g<br>$ hexo d<br></code></pre></td></tr></table></figure><p>生成页面，部署页面</p><h1 id="7-完成"><a href="#7-完成" class="headerlink" title="7. 完成"></a>7. 完成</h1><p>浏览器打开<a href="https://name.git.io/">https://name.git.io</a>即可看到页面</p><h1 id="8-hexo配置文件修改"><a href="#8-hexo配置文件修改" class="headerlink" title="8. hexo配置文件修改"></a>8. hexo配置文件修改</h1><p>博客根目录下的_config.yml是整个hexo框架的配置文件，详细可参考官方的配置描述。</p><h2 id="8-1-Site"><a href="#8-1-Site" class="headerlink" title="8.1. Site"></a>8.1. Site</h2><table><thead><tr><th align="center">名称</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">title</td><td align="center">网站标题</td></tr><tr><td align="center">subtitle</td><td align="center">网站副标题</td></tr><tr><td align="center">description</td><td align="center">网站描述</td></tr><tr><td align="center">keywords</td><td align="center">关键词</td></tr><tr><td align="center">author</td><td align="center">作者</td></tr><tr><td align="center">language</td><td align="center">网站语言</td></tr><tr><td align="center">timezone</td><td align="center">时区</td></tr></tbody></table><p>修改建议：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">title: <br>author: <br>language: zh_CN<br></code></pre></td></tr></table></figure><p>注意：<br>配置’ : ‘后要加空格</p><h2 id="8-2-URL"><a href="#8-2-URL" class="headerlink" title="8.2. URL"></a>8.2. URL</h2><table><thead><tr><th align="center">名称</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">url</td><td align="center">网站</td></tr><tr><td align="center">permalink</td><td align="center">网站链接格式</td></tr></tbody></table><p>修改建议：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">permalink:<br></code></pre></td></tr></table></figure><table><thead><tr><th align="center">参数</th><th align="center">结果</th></tr></thead><tbody><tr><td align="center">:year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F;</td><td align="center">2020&#x2F;06&#x2F;10&#x2F;hello-world&#x2F;</td></tr><tr><td align="center">:year&#x2F;:month-:day-:title&#x2F;</td><td align="center">2020&#x2F;06-10-hello-world&#x2F;</td></tr></tbody></table><h2 id="8-3-Extensions"><a href="#8-3-Extensions" class="headerlink" title="8.3. Extensions"></a>8.3. Extensions</h2><p>下面就有个themes，配置页面主题，默认landscape主题。</p><h1 id="9-更改主题"><a href="#9-更改主题" class="headerlink" title="9. 更改主题"></a>9. 更改主题</h1><p>官网主题地址：<a href="https://hexo.io/themes/">https://hexo.io/themes/</a><br>或者去github搜索hexo theme都能找到一大推主题</p><p>以hexo-theme-fluid为例<br>项目地址为：<a href="https://github.com/fluid-dev/hexo-theme-fluid">https://github.com/fluid-dev/hexo-theme-fluid</a></p><p>项目下方都会写明使用方法</p><p>以下简单介绍一下：</p><p>进入网站根目录blog，右键git bash here</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">cd</span> themes<br>$ git <span class="hljs-built_in">clone</span> https://github.com/fluid-dev/hexo-theme-fluid.git<br></code></pre></td></tr></table></figure><p>修改博客配置文件_config.yml，注意是根目录下的，不是主题目录下的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">themes: hexo-theme-fluid<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">cd</span> ..<br>$ hexo s<br></code></pre></td></tr></table></figure><p>本地检查是否有问题，没问题的话上传</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo d<br></code></pre></td></tr></table></figure><h1 id="10-创建新博客"><a href="#10-创建新博客" class="headerlink" title="10. 创建新博客"></a>10. 创建新博客</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo n <span class="hljs-string">&quot;My New Post&quot;</span><br>or<br>$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>会根据根目录下的scaffolds内文件生成md文件，默认按照post.md</p><p>可在配置文件_config.yml修改</p><h3 id="10-1-编写markdown"><a href="#10-1-编写markdown" class="headerlink" title="10.1. 编写markdown"></a>10.1. 编写markdown</h3><p>推荐使用VScode</p><p>下载地址：<a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a></p><h3 id="10-2-浏览器预览"><a href="#10-2-浏览器预览" class="headerlink" title="10.2. 浏览器预览"></a>10.2. 浏览器预览</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo s<br>or<br>$ hexo server<br></code></pre></td></tr></table></figure><p>预览地址:<a href="https://localhost:4000/">https://localhost:4000</a></p><h3 id="10-3-生成静态页面"><a href="#10-3-生成静态页面" class="headerlink" title="10.3. 生成静态页面"></a>10.3. 生成静态页面</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo g<br>or <br>$ hexo generate<br></code></pre></td></tr></table></figure><h3 id="10-4-提交到github"><a href="#10-4-提交到github" class="headerlink" title="10.4. 提交到github"></a>10.4. 提交到github</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo d<br>or<br>$ hexo deploy<br></code></pre></td></tr></table></figure><h1 id="11-博客插入图片"><a href="#11-博客插入图片" class="headerlink" title="11. 博客插入图片"></a>11. 博客插入图片</h1><h2 id="11-1-安装插件"><a href="#11-1-安装插件" class="headerlink" title="11.1. 安装插件"></a>11.1. 安装插件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">cd</span> node_modules<br>$ git <span class="hljs-built_in">clone</span> https://github.com/xcodebuild/hexo-asset-image.git<br></code></pre></td></tr></table></figure><h2 id="11-2-打开博客配置文件-config-yml"><a href="#11-2-打开博客配置文件-config-yml" class="headerlink" title="11.2. 打开博客配置文件_config.yml"></a>11.2. 打开博客配置文件_config.yml</h2><p>Writing栏下，修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">post_asset_folder: True<br></code></pre></td></tr></table></figure><h2 id="11-3-新建博客"><a href="#11-3-新建博客" class="headerlink" title="11.3. 新建博客"></a>11.3. 新建博客</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo n pic<br></code></pre></td></tr></table></figure><p>在source&#x2F;_posts目录下会生成一个pic.md和pic文件夹</p><p>将图片放入pic文件夹内</p><p>打开pic.md文件，编写说明：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">![sensen](./pic/sensen.pen)<br></code></pre></td></tr></table></figure><p>注意使用相对路径</p><h1 id="12-文章标题自动编号"><a href="#12-文章标题自动编号" class="headerlink" title="12. 文章标题自动编号"></a>12. 文章标题自动编号</h1><p>项目地址：<a href="https://github.com/legendmohe/markdown_index">https://github.com/legendmohe/markdown_index</a></p><p>vscode搜索插件markdown-index安装</p><p>命令面板输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">&gt;markdown add index<br></code></pre></td></tr></table></figure><p>运行即可添加编号</p><p>重复运行即可更新编号</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
